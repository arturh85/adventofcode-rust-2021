<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="806" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="789.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="789.00"> </text><svg id="frames" x="10" width="1180" total_samples="19908"><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (59 samples, 0.30%)</title><rect x="0.0050%" y="629" width="0.2964%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="59"/><text x="0.2550%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (59 samples, 0.30%)</title><rect x="0.0050%" y="613" width="0.2964%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="59"/><text x="0.2550%" y="623.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (59 samples, 0.30%)</title><rect x="0.0050%" y="597" width="0.2964%" height="15" fill="rgb(221,193,54)" fg:x="1" fg:w="59"/><text x="0.2550%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (59 samples, 0.30%)</title><rect x="0.0050%" y="581" width="0.2964%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="59"/><text x="0.2550%" y="591.50"></text></g><g><title>criterion::analysis::estimates::stats (59 samples, 0.30%)</title><rect x="0.0050%" y="565" width="0.2964%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="59"/><text x="0.2550%" y="575.50"></text></g><g><title>rayon::slice::quicksort::recurse (59 samples, 0.30%)</title><rect x="0.0050%" y="549" width="0.2964%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="59"/><text x="0.2550%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse (59 samples, 0.30%)</title><rect x="0.0050%" y="533" width="0.2964%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="59"/><text x="0.2550%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (12 samples, 0.06%)</title><rect x="0.2411%" y="517" width="0.0603%" height="15" fill="rgb(228,23,34)" fg:x="48" fg:w="12"/><text x="0.4911%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (118 samples, 0.59%)</title><rect x="0.0050%" y="677" width="0.5927%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="118"/><text x="0.2550%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (118 samples, 0.59%)</title><rect x="0.0050%" y="661" width="0.5927%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="118"/><text x="0.2550%" y="671.50"></text></g><g><title>rayon_core::registry::in_worker (118 samples, 0.59%)</title><rect x="0.0050%" y="645" width="0.5927%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="118"/><text x="0.2550%" y="655.50"></text></g><g><title>std::panicking::try (59 samples, 0.30%)</title><rect x="0.3014%" y="629" width="0.2964%" height="15" fill="rgb(240,193,28)" fg:x="60" fg:w="59"/><text x="0.5514%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (59 samples, 0.30%)</title><rect x="0.3014%" y="613" width="0.2964%" height="15" fill="rgb(216,20,37)" fg:x="60" fg:w="59"/><text x="0.5514%" y="623.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (59 samples, 0.30%)</title><rect x="0.3014%" y="597" width="0.2964%" height="15" fill="rgb(206,188,39)" fg:x="60" fg:w="59"/><text x="0.5514%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (59 samples, 0.30%)</title><rect x="0.3014%" y="581" width="0.2964%" height="15" fill="rgb(217,207,13)" fg:x="60" fg:w="59"/><text x="0.5514%" y="591.50"></text></g><g><title>criterion::analysis::estimates::stats (59 samples, 0.30%)</title><rect x="0.3014%" y="565" width="0.2964%" height="15" fill="rgb(231,73,38)" fg:x="60" fg:w="59"/><text x="0.5514%" y="575.50"></text></g><g><title>rayon::slice::quicksort::recurse (59 samples, 0.30%)</title><rect x="0.3014%" y="549" width="0.2964%" height="15" fill="rgb(225,20,46)" fg:x="60" fg:w="59"/><text x="0.5514%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse (59 samples, 0.30%)</title><rect x="0.3014%" y="533" width="0.2964%" height="15" fill="rgb(210,31,41)" fg:x="60" fg:w="59"/><text x="0.5514%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (16 samples, 0.08%)</title><rect x="0.5174%" y="517" width="0.0804%" height="15" fill="rgb(221,200,47)" fg:x="103" fg:w="16"/><text x="0.7674%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (69 samples, 0.35%)</title><rect x="0.5977%" y="629" width="0.3466%" height="15" fill="rgb(226,26,5)" fg:x="119" fg:w="69"/><text x="0.8477%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (69 samples, 0.35%)</title><rect x="0.5977%" y="613" width="0.3466%" height="15" fill="rgb(249,33,26)" fg:x="119" fg:w="69"/><text x="0.8477%" y="623.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (69 samples, 0.35%)</title><rect x="0.5977%" y="597" width="0.3466%" height="15" fill="rgb(235,183,28)" fg:x="119" fg:w="69"/><text x="0.8477%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (69 samples, 0.35%)</title><rect x="0.5977%" y="581" width="0.3466%" height="15" fill="rgb(221,5,38)" fg:x="119" fg:w="69"/><text x="0.8477%" y="591.50"></text></g><g><title>criterion::analysis::estimates::stats (69 samples, 0.35%)</title><rect x="0.5977%" y="565" width="0.3466%" height="15" fill="rgb(247,18,42)" fg:x="119" fg:w="69"/><text x="0.8477%" y="575.50"></text></g><g><title>rayon::slice::quicksort::recurse (69 samples, 0.35%)</title><rect x="0.5977%" y="549" width="0.3466%" height="15" fill="rgb(241,131,45)" fg:x="119" fg:w="69"/><text x="0.8477%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse (69 samples, 0.35%)</title><rect x="0.5977%" y="533" width="0.3466%" height="15" fill="rgb(249,31,29)" fg:x="119" fg:w="69"/><text x="0.8477%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (15 samples, 0.08%)</title><rect x="0.8690%" y="517" width="0.0753%" height="15" fill="rgb(225,111,53)" fg:x="173" fg:w="15"/><text x="1.1190%" y="527.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (253 samples, 1.27%)</title><rect x="0.0050%" y="709" width="1.2708%" height="15" fill="rgb(238,160,17)" fg:x="1" fg:w="253"/><text x="0.2550%" y="719.50"></text></g><g><title>rayon_core::registry::in_worker (253 samples, 1.27%)</title><rect x="0.0050%" y="693" width="1.2708%" height="15" fill="rgb(214,148,48)" fg:x="1" fg:w="253"/><text x="0.2550%" y="703.50"></text></g><g><title>std::panicking::try (135 samples, 0.68%)</title><rect x="0.5977%" y="677" width="0.6781%" height="15" fill="rgb(232,36,49)" fg:x="119" fg:w="135"/><text x="0.8477%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (135 samples, 0.68%)</title><rect x="0.5977%" y="661" width="0.6781%" height="15" fill="rgb(209,103,24)" fg:x="119" fg:w="135"/><text x="0.8477%" y="671.50"></text></g><g><title>rayon_core::registry::in_worker (135 samples, 0.68%)</title><rect x="0.5977%" y="645" width="0.6781%" height="15" fill="rgb(229,88,8)" fg:x="119" fg:w="135"/><text x="0.8477%" y="655.50"></text></g><g><title>std::panicking::try (66 samples, 0.33%)</title><rect x="0.9443%" y="629" width="0.3315%" height="15" fill="rgb(213,181,19)" fg:x="188" fg:w="66"/><text x="1.1943%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (66 samples, 0.33%)</title><rect x="0.9443%" y="613" width="0.3315%" height="15" fill="rgb(254,191,54)" fg:x="188" fg:w="66"/><text x="1.1943%" y="623.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (66 samples, 0.33%)</title><rect x="0.9443%" y="597" width="0.3315%" height="15" fill="rgb(241,83,37)" fg:x="188" fg:w="66"/><text x="1.1943%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (66 samples, 0.33%)</title><rect x="0.9443%" y="581" width="0.3315%" height="15" fill="rgb(233,36,39)" fg:x="188" fg:w="66"/><text x="1.1943%" y="591.50"></text></g><g><title>criterion::analysis::estimates::stats (66 samples, 0.33%)</title><rect x="0.9443%" y="565" width="0.3315%" height="15" fill="rgb(226,3,54)" fg:x="188" fg:w="66"/><text x="1.1943%" y="575.50"></text></g><g><title>rayon::slice::quicksort::recurse (66 samples, 0.33%)</title><rect x="0.9443%" y="549" width="0.3315%" height="15" fill="rgb(245,192,40)" fg:x="188" fg:w="66"/><text x="1.1943%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse (66 samples, 0.33%)</title><rect x="0.9443%" y="533" width="0.3315%" height="15" fill="rgb(238,167,29)" fg:x="188" fg:w="66"/><text x="1.1943%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (19 samples, 0.10%)</title><rect x="1.1804%" y="517" width="0.0954%" height="15" fill="rgb(232,182,51)" fg:x="235" fg:w="19"/><text x="1.4304%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.05%)</title><rect x="1.2759%" y="501" width="0.0452%" height="15" fill="rgb(231,60,39)" fg:x="254" fg:w="9"/><text x="1.5259%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.05%)</title><rect x="1.2759%" y="485" width="0.0452%" height="15" fill="rgb(208,69,12)" fg:x="254" fg:w="9"/><text x="1.5259%" y="495.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.05%)</title><rect x="1.2759%" y="469" width="0.0452%" height="15" fill="rgb(235,93,37)" fg:x="254" fg:w="9"/><text x="1.5259%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.05%)</title><rect x="1.2759%" y="453" width="0.0452%" height="15" fill="rgb(213,116,39)" fg:x="254" fg:w="9"/><text x="1.5259%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.05%)</title><rect x="1.2759%" y="437" width="0.0452%" height="15" fill="rgb(222,207,29)" fg:x="254" fg:w="9"/><text x="1.5259%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (17 samples, 0.09%)</title><rect x="1.2759%" y="549" width="0.0854%" height="15" fill="rgb(206,96,30)" fg:x="254" fg:w="17"/><text x="1.5259%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.09%)</title><rect x="1.2759%" y="533" width="0.0854%" height="15" fill="rgb(218,138,4)" fg:x="254" fg:w="17"/><text x="1.5259%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.09%)</title><rect x="1.2759%" y="517" width="0.0854%" height="15" fill="rgb(250,191,14)" fg:x="254" fg:w="17"/><text x="1.5259%" y="527.50"></text></g><g><title>std::panicking::try (8 samples, 0.04%)</title><rect x="1.3211%" y="501" width="0.0402%" height="15" fill="rgb(239,60,40)" fg:x="263" fg:w="8"/><text x="1.5711%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.04%)</title><rect x="1.3211%" y="485" width="0.0402%" height="15" fill="rgb(206,27,48)" fg:x="263" fg:w="8"/><text x="1.5711%" y="495.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 0.04%)</title><rect x="1.3211%" y="469" width="0.0402%" height="15" fill="rgb(225,35,8)" fg:x="263" fg:w="8"/><text x="1.5711%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.04%)</title><rect x="1.3211%" y="453" width="0.0402%" height="15" fill="rgb(250,213,24)" fg:x="263" fg:w="8"/><text x="1.5711%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.04%)</title><rect x="1.3211%" y="437" width="0.0402%" height="15" fill="rgb(247,123,22)" fg:x="263" fg:w="8"/><text x="1.5711%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.04%)</title><rect x="1.3613%" y="501" width="0.0352%" height="15" fill="rgb(231,138,38)" fg:x="271" fg:w="7"/><text x="1.6113%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.04%)</title><rect x="1.3613%" y="485" width="0.0352%" height="15" fill="rgb(231,145,46)" fg:x="271" fg:w="7"/><text x="1.6113%" y="495.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.04%)</title><rect x="1.3613%" y="469" width="0.0352%" height="15" fill="rgb(251,118,11)" fg:x="271" fg:w="7"/><text x="1.6113%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.04%)</title><rect x="1.3613%" y="453" width="0.0352%" height="15" fill="rgb(217,147,25)" fg:x="271" fg:w="7"/><text x="1.6113%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.04%)</title><rect x="1.3613%" y="437" width="0.0352%" height="15" fill="rgb(247,81,37)" fg:x="271" fg:w="7"/><text x="1.6113%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (30 samples, 0.15%)</title><rect x="1.2759%" y="597" width="0.1507%" height="15" fill="rgb(209,12,38)" fg:x="254" fg:w="30"/><text x="1.5259%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.15%)</title><rect x="1.2759%" y="581" width="0.1507%" height="15" fill="rgb(227,1,9)" fg:x="254" fg:w="30"/><text x="1.5259%" y="591.50"></text></g><g><title>rayon_core::registry::in_worker (30 samples, 0.15%)</title><rect x="1.2759%" y="565" width="0.1507%" height="15" fill="rgb(248,47,43)" fg:x="254" fg:w="30"/><text x="1.5259%" y="575.50"></text></g><g><title>std::panicking::try (13 samples, 0.07%)</title><rect x="1.3613%" y="549" width="0.0653%" height="15" fill="rgb(221,10,30)" fg:x="271" fg:w="13"/><text x="1.6113%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.07%)</title><rect x="1.3613%" y="533" width="0.0653%" height="15" fill="rgb(210,229,1)" fg:x="271" fg:w="13"/><text x="1.6113%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.07%)</title><rect x="1.3613%" y="517" width="0.0653%" height="15" fill="rgb(222,148,37)" fg:x="271" fg:w="13"/><text x="1.6113%" y="527.50"></text></g><g><title>std::panicking::try (6 samples, 0.03%)</title><rect x="1.3964%" y="501" width="0.0301%" height="15" fill="rgb(234,67,33)" fg:x="278" fg:w="6"/><text x="1.6464%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.03%)</title><rect x="1.3964%" y="485" width="0.0301%" height="15" fill="rgb(247,98,35)" fg:x="278" fg:w="6"/><text x="1.6464%" y="495.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.03%)</title><rect x="1.3964%" y="469" width="0.0301%" height="15" fill="rgb(247,138,52)" fg:x="278" fg:w="6"/><text x="1.6464%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.03%)</title><rect x="1.3964%" y="453" width="0.0301%" height="15" fill="rgb(213,79,30)" fg:x="278" fg:w="6"/><text x="1.6464%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.03%)</title><rect x="1.3964%" y="437" width="0.0301%" height="15" fill="rgb(246,177,23)" fg:x="278" fg:w="6"/><text x="1.6464%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.04%)</title><rect x="1.4266%" y="501" width="0.0352%" height="15" fill="rgb(230,62,27)" fg:x="284" fg:w="7"/><text x="1.6766%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.04%)</title><rect x="1.4266%" y="485" width="0.0352%" height="15" fill="rgb(216,154,8)" fg:x="284" fg:w="7"/><text x="1.6766%" y="495.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.04%)</title><rect x="1.4266%" y="469" width="0.0352%" height="15" fill="rgb(244,35,45)" fg:x="284" fg:w="7"/><text x="1.6766%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.04%)</title><rect x="1.4266%" y="453" width="0.0352%" height="15" fill="rgb(251,115,12)" fg:x="284" fg:w="7"/><text x="1.6766%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.04%)</title><rect x="1.4266%" y="437" width="0.0352%" height="15" fill="rgb(240,54,50)" fg:x="284" fg:w="7"/><text x="1.6766%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15 samples, 0.08%)</title><rect x="1.4266%" y="549" width="0.0753%" height="15" fill="rgb(233,84,52)" fg:x="284" fg:w="15"/><text x="1.6766%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.08%)</title><rect x="1.4266%" y="533" width="0.0753%" height="15" fill="rgb(207,117,47)" fg:x="284" fg:w="15"/><text x="1.6766%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.08%)</title><rect x="1.4266%" y="517" width="0.0753%" height="15" fill="rgb(249,43,39)" fg:x="284" fg:w="15"/><text x="1.6766%" y="527.50"></text></g><g><title>std::panicking::try (8 samples, 0.04%)</title><rect x="1.4617%" y="501" width="0.0402%" height="15" fill="rgb(209,38,44)" fg:x="291" fg:w="8"/><text x="1.7117%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.04%)</title><rect x="1.4617%" y="485" width="0.0402%" height="15" fill="rgb(236,212,23)" fg:x="291" fg:w="8"/><text x="1.7117%" y="495.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 0.04%)</title><rect x="1.4617%" y="469" width="0.0402%" height="15" fill="rgb(242,79,21)" fg:x="291" fg:w="8"/><text x="1.7117%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.04%)</title><rect x="1.4617%" y="453" width="0.0402%" height="15" fill="rgb(211,96,35)" fg:x="291" fg:w="8"/><text x="1.7117%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.04%)</title><rect x="1.4617%" y="437" width="0.0402%" height="15" fill="rgb(253,215,40)" fg:x="291" fg:w="8"/><text x="1.7117%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.04%)</title><rect x="1.5019%" y="501" width="0.0352%" height="15" fill="rgb(211,81,21)" fg:x="299" fg:w="7"/><text x="1.7519%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.04%)</title><rect x="1.5019%" y="485" width="0.0352%" height="15" fill="rgb(208,190,38)" fg:x="299" fg:w="7"/><text x="1.7519%" y="495.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.04%)</title><rect x="1.5019%" y="469" width="0.0352%" height="15" fill="rgb(235,213,38)" fg:x="299" fg:w="7"/><text x="1.7519%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.04%)</title><rect x="1.5019%" y="453" width="0.0352%" height="15" fill="rgb(237,122,38)" fg:x="299" fg:w="7"/><text x="1.7519%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.04%)</title><rect x="1.5019%" y="437" width="0.0352%" height="15" fill="rgb(244,218,35)" fg:x="299" fg:w="7"/><text x="1.7519%" y="447.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (62 samples, 0.31%)</title><rect x="1.2759%" y="709" width="0.3114%" height="15" fill="rgb(240,68,47)" fg:x="254" fg:w="62"/><text x="1.5259%" y="719.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (62 samples, 0.31%)</title><rect x="1.2759%" y="693" width="0.3114%" height="15" fill="rgb(210,16,53)" fg:x="254" fg:w="62"/><text x="1.5259%" y="703.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (62 samples, 0.31%)</title><rect x="1.2759%" y="677" width="0.3114%" height="15" fill="rgb(235,124,12)" fg:x="254" fg:w="62"/><text x="1.5259%" y="687.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (62 samples, 0.31%)</title><rect x="1.2759%" y="661" width="0.3114%" height="15" fill="rgb(224,169,11)" fg:x="254" fg:w="62"/><text x="1.5259%" y="671.50"></text></g><g><title>std::panicking::try (62 samples, 0.31%)</title><rect x="1.2759%" y="645" width="0.3114%" height="15" fill="rgb(250,166,2)" fg:x="254" fg:w="62"/><text x="1.5259%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (62 samples, 0.31%)</title><rect x="1.2759%" y="629" width="0.3114%" height="15" fill="rgb(242,216,29)" fg:x="254" fg:w="62"/><text x="1.5259%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (62 samples, 0.31%)</title><rect x="1.2759%" y="613" width="0.3114%" height="15" fill="rgb(230,116,27)" fg:x="254" fg:w="62"/><text x="1.5259%" y="623.50"></text></g><g><title>std::panicking::try (32 samples, 0.16%)</title><rect x="1.4266%" y="597" width="0.1607%" height="15" fill="rgb(228,99,48)" fg:x="284" fg:w="32"/><text x="1.6766%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.16%)</title><rect x="1.4266%" y="581" width="0.1607%" height="15" fill="rgb(253,11,6)" fg:x="284" fg:w="32"/><text x="1.6766%" y="591.50"></text></g><g><title>rayon_core::registry::in_worker (32 samples, 0.16%)</title><rect x="1.4266%" y="565" width="0.1607%" height="15" fill="rgb(247,143,39)" fg:x="284" fg:w="32"/><text x="1.6766%" y="575.50"></text></g><g><title>std::panicking::try (17 samples, 0.09%)</title><rect x="1.5019%" y="549" width="0.0854%" height="15" fill="rgb(236,97,10)" fg:x="299" fg:w="17"/><text x="1.7519%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.09%)</title><rect x="1.5019%" y="533" width="0.0854%" height="15" fill="rgb(233,208,19)" fg:x="299" fg:w="17"/><text x="1.7519%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.09%)</title><rect x="1.5019%" y="517" width="0.0854%" height="15" fill="rgb(216,164,2)" fg:x="299" fg:w="17"/><text x="1.7519%" y="527.50"></text></g><g><title>std::panicking::try (10 samples, 0.05%)</title><rect x="1.5371%" y="501" width="0.0502%" height="15" fill="rgb(220,129,5)" fg:x="306" fg:w="10"/><text x="1.7871%" y="511.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.05%)</title><rect x="1.5371%" y="485" width="0.0502%" height="15" fill="rgb(242,17,10)" fg:x="306" fg:w="10"/><text x="1.7871%" y="495.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.05%)</title><rect x="1.5371%" y="469" width="0.0502%" height="15" fill="rgb(242,107,0)" fg:x="306" fg:w="10"/><text x="1.7871%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.05%)</title><rect x="1.5371%" y="453" width="0.0502%" height="15" fill="rgb(251,28,31)" fg:x="306" fg:w="10"/><text x="1.7871%" y="463.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.05%)</title><rect x="1.5421%" y="437" width="0.0452%" height="15" fill="rgb(233,223,10)" fg:x="307" fg:w="9"/><text x="1.7921%" y="447.50"></text></g><g><title>criterion::analysis::estimates::stats (34 samples, 0.17%)</title><rect x="1.5923%" y="533" width="0.1708%" height="15" fill="rgb(215,21,27)" fg:x="317" fg:w="34"/><text x="1.8423%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (26 samples, 0.13%)</title><rect x="1.6325%" y="517" width="0.1306%" height="15" fill="rgb(232,23,21)" fg:x="325" fg:w="26"/><text x="1.8825%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (48 samples, 0.24%)</title><rect x="1.5873%" y="597" width="0.2411%" height="15" fill="rgb(244,5,23)" fg:x="316" fg:w="48"/><text x="1.8373%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (48 samples, 0.24%)</title><rect x="1.5873%" y="581" width="0.2411%" height="15" fill="rgb(226,81,46)" fg:x="316" fg:w="48"/><text x="1.8373%" y="591.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (48 samples, 0.24%)</title><rect x="1.5873%" y="565" width="0.2411%" height="15" fill="rgb(247,70,30)" fg:x="316" fg:w="48"/><text x="1.8373%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (48 samples, 0.24%)</title><rect x="1.5873%" y="549" width="0.2411%" height="15" fill="rgb(212,68,19)" fg:x="316" fg:w="48"/><text x="1.8373%" y="559.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.07%)</title><rect x="1.7631%" y="533" width="0.0653%" height="15" fill="rgb(240,187,13)" fg:x="351" fg:w="13"/><text x="2.0131%" y="543.50"></text></g><g><title>criterion::analysis::estimates::stats (33 samples, 0.17%)</title><rect x="1.8334%" y="533" width="0.1658%" height="15" fill="rgb(223,113,26)" fg:x="365" fg:w="33"/><text x="2.0834%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (27 samples, 0.14%)</title><rect x="1.8636%" y="517" width="0.1356%" height="15" fill="rgb(206,192,2)" fg:x="371" fg:w="27"/><text x="2.1136%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (98 samples, 0.49%)</title><rect x="1.5873%" y="645" width="0.4923%" height="15" fill="rgb(241,108,4)" fg:x="316" fg:w="98"/><text x="1.8373%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (98 samples, 0.49%)</title><rect x="1.5873%" y="629" width="0.4923%" height="15" fill="rgb(247,173,49)" fg:x="316" fg:w="98"/><text x="1.8373%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (98 samples, 0.49%)</title><rect x="1.5873%" y="613" width="0.4923%" height="15" fill="rgb(224,114,35)" fg:x="316" fg:w="98"/><text x="1.8373%" y="623.50"></text></g><g><title>std::panicking::try (50 samples, 0.25%)</title><rect x="1.8284%" y="597" width="0.2512%" height="15" fill="rgb(245,159,27)" fg:x="364" fg:w="50"/><text x="2.0784%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (50 samples, 0.25%)</title><rect x="1.8284%" y="581" width="0.2512%" height="15" fill="rgb(245,172,44)" fg:x="364" fg:w="50"/><text x="2.0784%" y="591.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (50 samples, 0.25%)</title><rect x="1.8284%" y="565" width="0.2512%" height="15" fill="rgb(236,23,11)" fg:x="364" fg:w="50"/><text x="2.0784%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (50 samples, 0.25%)</title><rect x="1.8284%" y="549" width="0.2512%" height="15" fill="rgb(205,117,38)" fg:x="364" fg:w="50"/><text x="2.0784%" y="559.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (16 samples, 0.08%)</title><rect x="1.9992%" y="533" width="0.0804%" height="15" fill="rgb(237,72,25)" fg:x="398" fg:w="16"/><text x="2.2492%" y="543.50"></text></g><g><title>criterion::analysis::estimates::stats (32 samples, 0.16%)</title><rect x="2.0846%" y="533" width="0.1607%" height="15" fill="rgb(244,70,9)" fg:x="415" fg:w="32"/><text x="2.3346%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (22 samples, 0.11%)</title><rect x="2.1348%" y="517" width="0.1105%" height="15" fill="rgb(217,125,39)" fg:x="425" fg:w="22"/><text x="2.3848%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (43 samples, 0.22%)</title><rect x="2.0796%" y="597" width="0.2160%" height="15" fill="rgb(235,36,10)" fg:x="414" fg:w="43"/><text x="2.3296%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (43 samples, 0.22%)</title><rect x="2.0796%" y="581" width="0.2160%" height="15" fill="rgb(251,123,47)" fg:x="414" fg:w="43"/><text x="2.3296%" y="591.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (43 samples, 0.22%)</title><rect x="2.0796%" y="565" width="0.2160%" height="15" fill="rgb(221,13,13)" fg:x="414" fg:w="43"/><text x="2.3296%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (43 samples, 0.22%)</title><rect x="2.0796%" y="549" width="0.2160%" height="15" fill="rgb(238,131,9)" fg:x="414" fg:w="43"/><text x="2.3296%" y="559.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (10 samples, 0.05%)</title><rect x="2.2453%" y="533" width="0.0502%" height="15" fill="rgb(211,50,8)" fg:x="447" fg:w="10"/><text x="2.4953%" y="543.50"></text></g><g><title>criterion::analysis::estimates::stats (35 samples, 0.18%)</title><rect x="2.3006%" y="533" width="0.1758%" height="15" fill="rgb(245,182,24)" fg:x="458" fg:w="35"/><text x="2.5506%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (29 samples, 0.15%)</title><rect x="2.3307%" y="517" width="0.1457%" height="15" fill="rgb(242,14,37)" fg:x="464" fg:w="29"/><text x="2.5807%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (188 samples, 0.94%)</title><rect x="1.5873%" y="693" width="0.9443%" height="15" fill="rgb(246,228,12)" fg:x="316" fg:w="188"/><text x="1.8373%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (188 samples, 0.94%)</title><rect x="1.5873%" y="677" width="0.9443%" height="15" fill="rgb(213,55,15)" fg:x="316" fg:w="188"/><text x="1.8373%" y="687.50"></text></g><g><title>rayon_core::registry::in_worker (188 samples, 0.94%)</title><rect x="1.5873%" y="661" width="0.9443%" height="15" fill="rgb(209,9,3)" fg:x="316" fg:w="188"/><text x="1.8373%" y="671.50"></text></g><g><title>std::panicking::try (90 samples, 0.45%)</title><rect x="2.0796%" y="645" width="0.4521%" height="15" fill="rgb(230,59,30)" fg:x="414" fg:w="90"/><text x="2.3296%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (90 samples, 0.45%)</title><rect x="2.0796%" y="629" width="0.4521%" height="15" fill="rgb(209,121,21)" fg:x="414" fg:w="90"/><text x="2.3296%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (90 samples, 0.45%)</title><rect x="2.0796%" y="613" width="0.4521%" height="15" fill="rgb(220,109,13)" fg:x="414" fg:w="90"/><text x="2.3296%" y="623.50"></text></g><g><title>std::panicking::try (47 samples, 0.24%)</title><rect x="2.2956%" y="597" width="0.2361%" height="15" fill="rgb(232,18,1)" fg:x="457" fg:w="47"/><text x="2.5456%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (47 samples, 0.24%)</title><rect x="2.2956%" y="581" width="0.2361%" height="15" fill="rgb(215,41,42)" fg:x="457" fg:w="47"/><text x="2.5456%" y="591.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (47 samples, 0.24%)</title><rect x="2.2956%" y="565" width="0.2361%" height="15" fill="rgb(224,123,36)" fg:x="457" fg:w="47"/><text x="2.5456%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (47 samples, 0.24%)</title><rect x="2.2956%" y="549" width="0.2361%" height="15" fill="rgb(240,125,3)" fg:x="457" fg:w="47"/><text x="2.5456%" y="559.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (11 samples, 0.06%)</title><rect x="2.4764%" y="533" width="0.0553%" height="15" fill="rgb(205,98,50)" fg:x="493" fg:w="11"/><text x="2.7264%" y="543.50"></text></g><g><title>criterion::analysis::estimates::stats (39 samples, 0.20%)</title><rect x="2.5316%" y="533" width="0.1959%" height="15" fill="rgb(205,185,37)" fg:x="504" fg:w="39"/><text x="2.7816%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (33 samples, 0.17%)</title><rect x="2.5618%" y="517" width="0.1658%" height="15" fill="rgb(238,207,15)" fg:x="510" fg:w="33"/><text x="2.8118%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (46 samples, 0.23%)</title><rect x="2.5316%" y="597" width="0.2311%" height="15" fill="rgb(213,199,42)" fg:x="504" fg:w="46"/><text x="2.7816%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.23%)</title><rect x="2.5316%" y="581" width="0.2311%" height="15" fill="rgb(235,201,11)" fg:x="504" fg:w="46"/><text x="2.7816%" y="591.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (46 samples, 0.23%)</title><rect x="2.5316%" y="565" width="0.2311%" height="15" fill="rgb(207,46,11)" fg:x="504" fg:w="46"/><text x="2.7816%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.23%)</title><rect x="2.5316%" y="549" width="0.2311%" height="15" fill="rgb(241,35,35)" fg:x="504" fg:w="46"/><text x="2.7816%" y="559.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.04%)</title><rect x="2.7275%" y="533" width="0.0352%" height="15" fill="rgb(243,32,47)" fg:x="543" fg:w="7"/><text x="2.9775%" y="543.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="2.7878%" y="517" width="0.0100%" height="15" fill="rgb(247,202,23)" fg:x="555" fg:w="2"/><text x="3.0378%" y="527.50"></text></g><g><title>criterion::analysis::estimates::stats (35 samples, 0.18%)</title><rect x="2.7627%" y="533" width="0.1758%" height="15" fill="rgb(219,102,11)" fg:x="550" fg:w="35"/><text x="3.0127%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (28 samples, 0.14%)</title><rect x="2.7979%" y="517" width="0.1406%" height="15" fill="rgb(243,110,44)" fg:x="557" fg:w="28"/><text x="3.0479%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (92 samples, 0.46%)</title><rect x="2.5316%" y="645" width="0.4621%" height="15" fill="rgb(222,74,54)" fg:x="504" fg:w="92"/><text x="2.7816%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (92 samples, 0.46%)</title><rect x="2.5316%" y="629" width="0.4621%" height="15" fill="rgb(216,99,12)" fg:x="504" fg:w="92"/><text x="2.7816%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (92 samples, 0.46%)</title><rect x="2.5316%" y="613" width="0.4621%" height="15" fill="rgb(226,22,26)" fg:x="504" fg:w="92"/><text x="2.7816%" y="623.50"></text></g><g><title>std::panicking::try (46 samples, 0.23%)</title><rect x="2.7627%" y="597" width="0.2311%" height="15" fill="rgb(217,163,10)" fg:x="550" fg:w="46"/><text x="3.0127%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (46 samples, 0.23%)</title><rect x="2.7627%" y="581" width="0.2311%" height="15" fill="rgb(213,25,53)" fg:x="550" fg:w="46"/><text x="3.0127%" y="591.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (46 samples, 0.23%)</title><rect x="2.7627%" y="565" width="0.2311%" height="15" fill="rgb(252,105,26)" fg:x="550" fg:w="46"/><text x="3.0127%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (46 samples, 0.23%)</title><rect x="2.7627%" y="549" width="0.2311%" height="15" fill="rgb(220,39,43)" fg:x="550" fg:w="46"/><text x="3.0127%" y="559.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (11 samples, 0.06%)</title><rect x="2.9385%" y="533" width="0.0553%" height="15" fill="rgb(229,68,48)" fg:x="585" fg:w="11"/><text x="3.1885%" y="543.50"></text></g><g><title>criterion::analysis::estimates::stats (33 samples, 0.17%)</title><rect x="2.9938%" y="533" width="0.1658%" height="15" fill="rgb(252,8,32)" fg:x="596" fg:w="33"/><text x="3.2438%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (26 samples, 0.13%)</title><rect x="3.0289%" y="517" width="0.1306%" height="15" fill="rgb(223,20,43)" fg:x="603" fg:w="26"/><text x="3.2789%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (40 samples, 0.20%)</title><rect x="2.9938%" y="597" width="0.2009%" height="15" fill="rgb(229,81,49)" fg:x="596" fg:w="40"/><text x="3.2438%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.20%)</title><rect x="2.9938%" y="581" width="0.2009%" height="15" fill="rgb(236,28,36)" fg:x="596" fg:w="40"/><text x="3.2438%" y="591.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (40 samples, 0.20%)</title><rect x="2.9938%" y="565" width="0.2009%" height="15" fill="rgb(249,185,26)" fg:x="596" fg:w="40"/><text x="3.2438%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.20%)</title><rect x="2.9938%" y="549" width="0.2009%" height="15" fill="rgb(249,174,33)" fg:x="596" fg:w="40"/><text x="3.2438%" y="559.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (7 samples, 0.04%)</title><rect x="3.1595%" y="533" width="0.0352%" height="15" fill="rgb(233,201,37)" fg:x="629" fg:w="7"/><text x="3.4095%" y="543.50"></text></g><g><title>criterion::analysis::estimates::stats (6 samples, 0.03%)</title><rect x="3.1997%" y="533" width="0.0301%" height="15" fill="rgb(221,78,26)" fg:x="637" fg:w="6"/><text x="3.4497%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (340 samples, 1.71%)</title><rect x="1.5873%" y="709" width="1.7079%" height="15" fill="rgb(250,127,30)" fg:x="316" fg:w="340"/><text x="1.8373%" y="719.50"></text></g><g><title>std::panicking::try (152 samples, 0.76%)</title><rect x="2.5316%" y="693" width="0.7635%" height="15" fill="rgb(230,49,44)" fg:x="504" fg:w="152"/><text x="2.7816%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (152 samples, 0.76%)</title><rect x="2.5316%" y="677" width="0.7635%" height="15" fill="rgb(229,67,23)" fg:x="504" fg:w="152"/><text x="2.7816%" y="687.50"></text></g><g><title>rayon_core::registry::in_worker (152 samples, 0.76%)</title><rect x="2.5316%" y="661" width="0.7635%" height="15" fill="rgb(249,83,47)" fg:x="504" fg:w="152"/><text x="2.7816%" y="671.50"></text></g><g><title>std::panicking::try (60 samples, 0.30%)</title><rect x="2.9938%" y="645" width="0.3014%" height="15" fill="rgb(215,43,3)" fg:x="596" fg:w="60"/><text x="3.2438%" y="655.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (60 samples, 0.30%)</title><rect x="2.9938%" y="629" width="0.3014%" height="15" fill="rgb(238,154,13)" fg:x="596" fg:w="60"/><text x="3.2438%" y="639.50"></text></g><g><title>rayon_core::registry::in_worker (60 samples, 0.30%)</title><rect x="2.9938%" y="613" width="0.3014%" height="15" fill="rgb(219,56,2)" fg:x="596" fg:w="60"/><text x="3.2438%" y="623.50"></text></g><g><title>std::panicking::try (20 samples, 0.10%)</title><rect x="3.1947%" y="597" width="0.1005%" height="15" fill="rgb(233,0,4)" fg:x="636" fg:w="20"/><text x="3.4447%" y="607.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.10%)</title><rect x="3.1947%" y="581" width="0.1005%" height="15" fill="rgb(235,30,7)" fg:x="636" fg:w="20"/><text x="3.4447%" y="591.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (20 samples, 0.10%)</title><rect x="3.1947%" y="565" width="0.1005%" height="15" fill="rgb(250,79,13)" fg:x="636" fg:w="20"/><text x="3.4447%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (20 samples, 0.10%)</title><rect x="3.1947%" y="549" width="0.1005%" height="15" fill="rgb(211,146,34)" fg:x="636" fg:w="20"/><text x="3.4447%" y="559.50"></text></g><g><title>criterion::stats::univariate::resamples::Resamples&lt;A&gt;::next (13 samples, 0.07%)</title><rect x="3.2299%" y="533" width="0.0653%" height="15" fill="rgb(228,22,38)" fg:x="643" fg:w="13"/><text x="3.4799%" y="543.50"></text></g><g><title>std::panicking::try (21 samples, 0.11%)</title><rect x="3.2952%" y="709" width="0.1055%" height="15" fill="rgb(235,168,5)" fg:x="656" fg:w="21"/><text x="3.5452%" y="719.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.11%)</title><rect x="3.2952%" y="693" width="0.1055%" height="15" fill="rgb(221,155,16)" fg:x="656" fg:w="21"/><text x="3.5452%" y="703.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.11%)</title><rect x="3.2952%" y="677" width="0.1055%" height="15" fill="rgb(215,215,53)" fg:x="656" fg:w="21"/><text x="3.5452%" y="687.50"></text></g><g><title>std::panicking::try (21 samples, 0.11%)</title><rect x="3.2952%" y="661" width="0.1055%" height="15" fill="rgb(223,4,10)" fg:x="656" fg:w="21"/><text x="3.5452%" y="671.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.11%)</title><rect x="3.2952%" y="645" width="0.1055%" height="15" fill="rgb(234,103,6)" fg:x="656" fg:w="21"/><text x="3.5452%" y="655.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.11%)</title><rect x="3.2952%" y="629" width="0.1055%" height="15" fill="rgb(227,97,0)" fg:x="656" fg:w="21"/><text x="3.5452%" y="639.50"></text></g><g><title>std::panicking::try (21 samples, 0.11%)</title><rect x="3.2952%" y="613" width="0.1055%" height="15" fill="rgb(234,150,53)" fg:x="656" fg:w="21"/><text x="3.5452%" y="623.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.11%)</title><rect x="3.2952%" y="597" width="0.1055%" height="15" fill="rgb(228,201,54)" fg:x="656" fg:w="21"/><text x="3.5452%" y="607.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.11%)</title><rect x="3.2952%" y="581" width="0.1055%" height="15" fill="rgb(222,22,37)" fg:x="656" fg:w="21"/><text x="3.5452%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (21 samples, 0.11%)</title><rect x="3.2952%" y="565" width="0.1055%" height="15" fill="rgb(237,53,32)" fg:x="656" fg:w="21"/><text x="3.5452%" y="575.50"></text></g><g><title>criterion::analysis::estimates::stats (21 samples, 0.11%)</title><rect x="3.2952%" y="549" width="0.1055%" height="15" fill="rgb(233,25,53)" fg:x="656" fg:w="21"/><text x="3.5452%" y="559.50"></text></g><g><title>rayon::slice::quicksort::recurse (21 samples, 0.11%)</title><rect x="3.2952%" y="533" width="0.1055%" height="15" fill="rgb(210,40,34)" fg:x="656" fg:w="21"/><text x="3.5452%" y="543.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="3.4057%" y="533" width="0.0100%" height="15" fill="rgb(241,220,44)" fg:x="678" fg:w="2"/><text x="3.6557%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="3.4057%" y="517" width="0.0100%" height="15" fill="rgb(235,28,35)" fg:x="678" fg:w="2"/><text x="3.6557%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="3.4057%" y="501" width="0.0100%" height="15" fill="rgb(210,56,17)" fg:x="678" fg:w="2"/><text x="3.6557%" y="511.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="3.4157%" y="485" width="0.0151%" height="15" fill="rgb(224,130,29)" fg:x="680" fg:w="3"/><text x="3.6657%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="3.4157%" y="469" width="0.0151%" height="15" fill="rgb(235,212,8)" fg:x="680" fg:w="3"/><text x="3.6657%" y="479.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.02%)</title><rect x="3.4157%" y="453" width="0.0151%" height="15" fill="rgb(223,33,50)" fg:x="680" fg:w="3"/><text x="3.6657%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="3.4157%" y="437" width="0.0151%" height="15" fill="rgb(219,149,13)" fg:x="680" fg:w="3"/><text x="3.6657%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.04%)</title><rect x="3.4057%" y="581" width="0.0402%" height="15" fill="rgb(250,156,29)" fg:x="678" fg:w="8"/><text x="3.6557%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.04%)</title><rect x="3.4057%" y="565" width="0.0402%" height="15" fill="rgb(216,193,19)" fg:x="678" fg:w="8"/><text x="3.6557%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.04%)</title><rect x="3.4057%" y="549" width="0.0402%" height="15" fill="rgb(216,135,14)" fg:x="678" fg:w="8"/><text x="3.6557%" y="559.50"></text></g><g><title>std::panicking::try (6 samples, 0.03%)</title><rect x="3.4157%" y="533" width="0.0301%" height="15" fill="rgb(241,47,5)" fg:x="680" fg:w="6"/><text x="3.6657%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.03%)</title><rect x="3.4157%" y="517" width="0.0301%" height="15" fill="rgb(233,42,35)" fg:x="680" fg:w="6"/><text x="3.6657%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.03%)</title><rect x="3.4157%" y="501" width="0.0301%" height="15" fill="rgb(231,13,6)" fg:x="680" fg:w="6"/><text x="3.6657%" y="511.50"></text></g><g><title>std::panicking::try (3 samples, 0.02%)</title><rect x="3.4308%" y="485" width="0.0151%" height="15" fill="rgb(207,181,40)" fg:x="683" fg:w="3"/><text x="3.6808%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="3.4308%" y="469" width="0.0151%" height="15" fill="rgb(254,173,49)" fg:x="683" fg:w="3"/><text x="3.6808%" y="479.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.02%)</title><rect x="3.4308%" y="453" width="0.0151%" height="15" fill="rgb(221,1,38)" fg:x="683" fg:w="3"/><text x="3.6808%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="3.4308%" y="437" width="0.0151%" height="15" fill="rgb(206,124,46)" fg:x="683" fg:w="3"/><text x="3.6808%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (3 samples, 0.02%)</title><rect x="3.4459%" y="485" width="0.0151%" height="15" fill="rgb(249,21,11)" fg:x="686" fg:w="3"/><text x="3.6959%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (3 samples, 0.02%)</title><rect x="3.4459%" y="469" width="0.0151%" height="15" fill="rgb(222,201,40)" fg:x="686" fg:w="3"/><text x="3.6959%" y="479.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (3 samples, 0.02%)</title><rect x="3.4459%" y="453" width="0.0151%" height="15" fill="rgb(235,61,29)" fg:x="686" fg:w="3"/><text x="3.6959%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.02%)</title><rect x="3.4459%" y="437" width="0.0151%" height="15" fill="rgb(219,207,3)" fg:x="686" fg:w="3"/><text x="3.6959%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.02%)</title><rect x="3.4459%" y="533" width="0.0201%" height="15" fill="rgb(222,56,46)" fg:x="686" fg:w="4"/><text x="3.6959%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.02%)</title><rect x="3.4459%" y="517" width="0.0201%" height="15" fill="rgb(239,76,54)" fg:x="686" fg:w="4"/><text x="3.6959%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.02%)</title><rect x="3.4459%" y="501" width="0.0201%" height="15" fill="rgb(231,124,27)" fg:x="686" fg:w="4"/><text x="3.6959%" y="511.50"></text></g><g><title>[unknown] (692 samples, 3.48%)</title><rect x="0.0000%" y="725" width="3.4760%" height="15" fill="rgb(249,195,6)" fg:x="0" fg:w="692"/><text x="0.2500%" y="735.50">[un..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 0.07%)</title><rect x="3.4057%" y="709" width="0.0703%" height="15" fill="rgb(237,174,47)" fg:x="678" fg:w="14"/><text x="3.6557%" y="719.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (14 samples, 0.07%)</title><rect x="3.4057%" y="693" width="0.0703%" height="15" fill="rgb(206,201,31)" fg:x="678" fg:w="14"/><text x="3.6557%" y="703.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 0.07%)</title><rect x="3.4057%" y="677" width="0.0703%" height="15" fill="rgb(231,57,52)" fg:x="678" fg:w="14"/><text x="3.6557%" y="687.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14 samples, 0.07%)</title><rect x="3.4057%" y="661" width="0.0703%" height="15" fill="rgb(248,177,22)" fg:x="678" fg:w="14"/><text x="3.6557%" y="671.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.07%)</title><rect x="3.4057%" y="645" width="0.0703%" height="15" fill="rgb(215,211,37)" fg:x="678" fg:w="14"/><text x="3.6557%" y="655.50"></text></g><g><title>std::panicking::try (14 samples, 0.07%)</title><rect x="3.4057%" y="629" width="0.0703%" height="15" fill="rgb(241,128,51)" fg:x="678" fg:w="14"/><text x="3.6557%" y="639.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.07%)</title><rect x="3.4057%" y="613" width="0.0703%" height="15" fill="rgb(227,165,31)" fg:x="678" fg:w="14"/><text x="3.6557%" y="623.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.07%)</title><rect x="3.4057%" y="597" width="0.0703%" height="15" fill="rgb(228,167,24)" fg:x="678" fg:w="14"/><text x="3.6557%" y="607.50"></text></g><g><title>std::panicking::try (6 samples, 0.03%)</title><rect x="3.4459%" y="581" width="0.0301%" height="15" fill="rgb(228,143,12)" fg:x="686" fg:w="6"/><text x="3.6959%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.03%)</title><rect x="3.4459%" y="565" width="0.0301%" height="15" fill="rgb(249,149,8)" fg:x="686" fg:w="6"/><text x="3.6959%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.03%)</title><rect x="3.4459%" y="549" width="0.0301%" height="15" fill="rgb(243,35,44)" fg:x="686" fg:w="6"/><text x="3.6959%" y="559.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="3.4659%" y="533" width="0.0100%" height="15" fill="rgb(246,89,9)" fg:x="690" fg:w="2"/><text x="3.7159%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="3.4659%" y="517" width="0.0100%" height="15" fill="rgb(233,213,13)" fg:x="690" fg:w="2"/><text x="3.7159%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="3.4659%" y="501" width="0.0100%" height="15" fill="rgb(233,141,41)" fg:x="690" fg:w="2"/><text x="3.7159%" y="511.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="3.4659%" y="485" width="0.0100%" height="15" fill="rgb(239,167,4)" fg:x="690" fg:w="2"/><text x="3.7159%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="3.4659%" y="469" width="0.0100%" height="15" fill="rgb(209,217,16)" fg:x="690" fg:w="2"/><text x="3.7159%" y="479.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (2 samples, 0.01%)</title><rect x="3.4659%" y="453" width="0.0100%" height="15" fill="rgb(219,88,35)" fg:x="690" fg:w="2"/><text x="3.7159%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.01%)</title><rect x="3.4659%" y="437" width="0.0100%" height="15" fill="rgb(220,193,23)" fg:x="690" fg:w="2"/><text x="3.7159%" y="447.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="3.4810%" y="437" width="0.0201%" height="15" fill="rgb(230,90,52)" fg:x="693" fg:w="4"/><text x="3.7310%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.02%)</title><rect x="3.4810%" y="421" width="0.0201%" height="15" fill="rgb(252,106,19)" fg:x="693" fg:w="4"/><text x="3.7310%" y="431.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.02%)</title><rect x="3.4810%" y="405" width="0.0201%" height="15" fill="rgb(206,74,20)" fg:x="693" fg:w="4"/><text x="3.7310%" y="415.50"></text></g><g><title>criterion::analysis::estimates (5 samples, 0.03%)</title><rect x="3.4810%" y="453" width="0.0251%" height="15" fill="rgb(230,138,44)" fg:x="693" fg:w="5"/><text x="3.7310%" y="463.50"></text></g><g><title>[libc-2.31.so] (301 samples, 1.51%)</title><rect x="3.5312%" y="373" width="1.5120%" height="15" fill="rgb(235,182,43)" fg:x="703" fg:w="301"/><text x="3.7812%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="357" width="0.0100%" height="15" fill="rgb(242,16,51)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="341" width="0.0100%" height="15" fill="rgb(248,9,4)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="325" width="0.0100%" height="15" fill="rgb(210,31,22)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="309" width="0.0100%" height="15" fill="rgb(239,54,39)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="293" width="0.0100%" height="15" fill="rgb(230,99,41)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="277" width="0.0100%" height="15" fill="rgb(253,106,12)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="261" width="0.0100%" height="15" fill="rgb(213,46,41)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="245" width="0.0100%" height="15" fill="rgb(215,133,35)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="70.5847%" y="229" width="0.0100%" height="15" fill="rgb(213,28,5)" fg:x="14052" fg:w="2"/><text x="70.8347%" y="239.50"></text></g><g><title>[libc-2.31.so] (208 samples, 1.04%)</title><rect x="70.5947%" y="341" width="1.0448%" height="15" fill="rgb(215,77,49)" fg:x="14054" fg:w="208"/><text x="70.8447%" y="351.50"></text></g><g><title>adventofcode_rust_2021::day13::execute_fold (13,261 samples, 66.61%)</title><rect x="5.0482%" y="373" width="66.6114%" height="15" fill="rgb(248,100,22)" fg:x="1005" fg:w="13261"/><text x="5.2982%" y="383.50">adventofcode_rust_2021::day13::execute_fold</text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::default (212 samples, 1.06%)</title><rect x="70.5947%" y="357" width="1.0649%" height="15" fill="rgb(208,67,9)" fg:x="14054" fg:w="212"/><text x="70.8447%" y="367.50"></text></g><g><title>__libc_malloc (4 samples, 0.02%)</title><rect x="71.6395%" y="341" width="0.0201%" height="15" fill="rgb(219,133,21)" fg:x="14262" fg:w="4"/><text x="71.8895%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.02%)</title><rect x="71.6596%" y="373" width="0.0201%" height="15" fill="rgb(246,46,29)" fg:x="14266" fg:w="4"/><text x="71.9096%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.02%)</title><rect x="71.6647%" y="357" width="0.0151%" height="15" fill="rgb(246,185,52)" fg:x="14267" fg:w="3"/><text x="71.9147%" y="367.50"></text></g><g><title>realloc (3 samples, 0.02%)</title><rect x="71.6647%" y="341" width="0.0151%" height="15" fill="rgb(252,136,11)" fg:x="14267" fg:w="3"/><text x="71.9147%" y="351.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="71.6697%" y="325" width="0.0100%" height="15" fill="rgb(219,138,53)" fg:x="14268" fg:w="2"/><text x="71.9197%" y="335.50"></text></g><g><title>[libc-2.31.so] (2 samples, 0.01%)</title><rect x="71.6697%" y="309" width="0.0100%" height="15" fill="rgb(211,51,23)" fg:x="14268" fg:w="2"/><text x="71.9197%" y="319.50"></text></g><g><title>cfree (4 samples, 0.02%)</title><rect x="71.6797%" y="373" width="0.0201%" height="15" fill="rgb(247,221,28)" fg:x="14270" fg:w="4"/><text x="71.9297%" y="383.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (8 samples, 0.04%)</title><rect x="71.7048%" y="213" width="0.0402%" height="15" fill="rgb(251,222,45)" fg:x="14275" fg:w="8"/><text x="71.9548%" y="223.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.04%)</title><rect x="71.7048%" y="197" width="0.0402%" height="15" fill="rgb(217,162,53)" fg:x="14275" fg:w="8"/><text x="71.9548%" y="207.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (8 samples, 0.04%)</title><rect x="71.7048%" y="181" width="0.0402%" height="15" fill="rgb(229,93,14)" fg:x="14275" fg:w="8"/><text x="71.9548%" y="191.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (8 samples, 0.04%)</title><rect x="71.7048%" y="165" width="0.0402%" height="15" fill="rgb(209,67,49)" fg:x="14275" fg:w="8"/><text x="71.9548%" y="175.50"></text></g><g><title>__libc_write (8 samples, 0.04%)</title><rect x="71.7048%" y="149" width="0.0402%" height="15" fill="rgb(213,87,29)" fg:x="14275" fg:w="8"/><text x="71.9548%" y="159.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="71.7199%" y="133" width="0.0251%" height="15" fill="rgb(205,151,52)" fg:x="14278" fg:w="5"/><text x="71.9699%" y="143.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="71.7199%" y="117" width="0.0251%" height="15" fill="rgb(253,215,39)" fg:x="14278" fg:w="5"/><text x="71.9699%" y="127.50"></text></g><g><title>[unknown] (5 samples, 0.03%)</title><rect x="71.7199%" y="101" width="0.0251%" height="15" fill="rgb(221,220,41)" fg:x="14278" fg:w="5"/><text x="71.9699%" y="111.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="71.7249%" y="85" width="0.0201%" height="15" fill="rgb(218,133,21)" fg:x="14279" fg:w="4"/><text x="71.9749%" y="95.50"></text></g><g><title>[unknown] (4 samples, 0.02%)</title><rect x="71.7249%" y="69" width="0.0201%" height="15" fill="rgb(221,193,43)" fg:x="14279" fg:w="4"/><text x="71.9749%" y="79.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="71.7350%" y="53" width="0.0100%" height="15" fill="rgb(240,128,52)" fg:x="14281" fg:w="2"/><text x="71.9850%" y="63.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="71.7350%" y="37" width="0.0100%" height="15" fill="rgb(253,114,12)" fg:x="14281" fg:w="2"/><text x="71.9850%" y="47.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (5 samples, 0.03%)</title><rect x="71.7450%" y="213" width="0.0251%" height="15" fill="rgb(215,223,47)" fg:x="14283" fg:w="5"/><text x="71.9950%" y="223.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (5 samples, 0.03%)</title><rect x="71.7450%" y="197" width="0.0251%" height="15" fill="rgb(248,225,23)" fg:x="14283" fg:w="5"/><text x="71.9950%" y="207.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (5 samples, 0.03%)</title><rect x="71.7450%" y="181" width="0.0251%" height="15" fill="rgb(250,108,0)" fg:x="14283" fg:w="5"/><text x="71.9950%" y="191.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (5 samples, 0.03%)</title><rect x="71.7450%" y="165" width="0.0251%" height="15" fill="rgb(228,208,7)" fg:x="14283" fg:w="5"/><text x="71.9950%" y="175.50"></text></g><g><title>__libc_write (5 samples, 0.03%)</title><rect x="71.7450%" y="149" width="0.0251%" height="15" fill="rgb(244,45,10)" fg:x="14283" fg:w="5"/><text x="71.9950%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,590 samples, 68.26%)</title><rect x="3.5112%" y="437" width="68.2640%" height="15" fill="rgb(207,125,25)" fg:x="699" fg:w="13590"/><text x="3.7612%" y="447.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter</text></g><g><title>criterion::Bencher::iter (13,590 samples, 68.26%)</title><rect x="3.5112%" y="421" width="68.2640%" height="15" fill="rgb(210,195,18)" fg:x="699" fg:w="13590"/><text x="3.7612%" y="431.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2021::day13::day13_part2::RunnerStruct as aoc_runner::Runner&gt;::bench (13,590 samples, 68.26%)</title><rect x="3.5112%" y="405" width="68.2640%" height="15" fill="rgb(249,80,12)" fg:x="699" fg:w="13590"/><text x="3.7612%" y="415.50">&lt;adventofcode_rust_2021::day13::day13_part2::RunnerStruct as aoc_runner::Runner&gt;::bench</text></g><g><title>adventofcode_rust_2021::day13::part2 (13,590 samples, 68.26%)</title><rect x="3.5112%" y="389" width="68.2640%" height="15" fill="rgb(221,65,9)" fg:x="699" fg:w="13590"/><text x="3.7612%" y="399.50">adventofcode_rust_2021::day13::part2</text></g><g><title>std::io::stdio::_print (15 samples, 0.08%)</title><rect x="71.6998%" y="373" width="0.0753%" height="15" fill="rgb(235,49,36)" fg:x="14274" fg:w="15"/><text x="71.9498%" y="383.50"></text></g><g><title>std::io::stdio::print_to (15 samples, 0.08%)</title><rect x="71.6998%" y="357" width="0.0753%" height="15" fill="rgb(225,32,20)" fg:x="14274" fg:w="15"/><text x="71.9498%" y="367.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (15 samples, 0.08%)</title><rect x="71.6998%" y="341" width="0.0753%" height="15" fill="rgb(215,141,46)" fg:x="14274" fg:w="15"/><text x="71.9498%" y="351.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (15 samples, 0.08%)</title><rect x="71.6998%" y="325" width="0.0753%" height="15" fill="rgb(250,160,47)" fg:x="14274" fg:w="15"/><text x="71.9498%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (14 samples, 0.07%)</title><rect x="71.7048%" y="309" width="0.0703%" height="15" fill="rgb(216,222,40)" fg:x="14275" fg:w="14"/><text x="71.9548%" y="319.50"></text></g><g><title>core::fmt::write (14 samples, 0.07%)</title><rect x="71.7048%" y="293" width="0.0703%" height="15" fill="rgb(234,217,39)" fg:x="14275" fg:w="14"/><text x="71.9548%" y="303.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (14 samples, 0.07%)</title><rect x="71.7048%" y="277" width="0.0703%" height="15" fill="rgb(207,178,40)" fg:x="14275" fg:w="14"/><text x="71.9548%" y="287.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (14 samples, 0.07%)</title><rect x="71.7048%" y="261" width="0.0703%" height="15" fill="rgb(221,136,13)" fg:x="14275" fg:w="14"/><text x="71.9548%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (14 samples, 0.07%)</title><rect x="71.7048%" y="245" width="0.0703%" height="15" fill="rgb(249,199,10)" fg:x="14275" fg:w="14"/><text x="71.9548%" y="255.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (14 samples, 0.07%)</title><rect x="71.7048%" y="229" width="0.0703%" height="15" fill="rgb(249,222,13)" fg:x="14275" fg:w="14"/><text x="71.9548%" y="239.50"></text></g><g><title>[libc-2.31.so] (123 samples, 0.62%)</title><rect x="71.7902%" y="389" width="0.6178%" height="15" fill="rgb(244,185,38)" fg:x="14292" fg:w="123"/><text x="72.0402%" y="399.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9150%" y="373" width="0.0100%" height="15" fill="rgb(236,202,9)" fg:x="19692" fg:w="2"/><text x="99.1650%" y="383.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9150%" y="357" width="0.0100%" height="15" fill="rgb(250,229,37)" fg:x="19692" fg:w="2"/><text x="99.1650%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9150%" y="341" width="0.0100%" height="15" fill="rgb(206,174,23)" fg:x="19692" fg:w="2"/><text x="99.1650%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9150%" y="325" width="0.0100%" height="15" fill="rgb(211,33,43)" fg:x="19692" fg:w="2"/><text x="99.1650%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9150%" y="309" width="0.0100%" height="15" fill="rgb(245,58,50)" fg:x="19692" fg:w="2"/><text x="99.1650%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="98.9150%" y="293" width="0.0100%" height="15" fill="rgb(244,68,36)" fg:x="19692" fg:w="2"/><text x="99.1650%" y="303.50"></text></g><g><title>[libc-2.31.so] (109 samples, 0.55%)</title><rect x="98.9301%" y="357" width="0.5475%" height="15" fill="rgb(232,229,15)" fg:x="19695" fg:w="109"/><text x="99.1801%" y="367.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="341" width="0.0100%" height="15" fill="rgb(254,30,23)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="351.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="325" width="0.0100%" height="15" fill="rgb(235,160,14)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="335.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="309" width="0.0100%" height="15" fill="rgb(212,155,44)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="293" width="0.0100%" height="15" fill="rgb(226,2,50)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="277" width="0.0100%" height="15" fill="rgb(234,177,6)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="261" width="0.0100%" height="15" fill="rgb(217,24,9)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="245" width="0.0100%" height="15" fill="rgb(220,13,46)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="255.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="229" width="0.0100%" height="15" fill="rgb(239,221,27)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="239.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="213" width="0.0100%" height="15" fill="rgb(222,198,25)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="223.50"></text></g><g><title>[unknown] (2 samples, 0.01%)</title><rect x="99.4676%" y="197" width="0.0100%" height="15" fill="rgb(211,99,13)" fg:x="19802" fg:w="2"/><text x="99.7176%" y="207.50"></text></g><g><title>adventofcode_rust_2021::day13::execute_fold (5,393 samples, 27.09%)</title><rect x="72.4081%" y="389" width="27.0896%" height="15" fill="rgb(232,111,31)" fg:x="14415" fg:w="5393"/><text x="72.6581%" y="399.50">adventofcode_rust_2021::day13::execute_fold</text></g><g><title>ndarray::impl_constructors::&lt;impl ndarray::ArrayBase&lt;S,D&gt;&gt;::default (114 samples, 0.57%)</title><rect x="98.9251%" y="373" width="0.5726%" height="15" fill="rgb(245,82,37)" fg:x="19694" fg:w="114"/><text x="99.1751%" y="383.50"></text></g><g><title>__libc_malloc (4 samples, 0.02%)</title><rect x="99.4776%" y="357" width="0.0201%" height="15" fill="rgb(227,149,46)" fg:x="19804" fg:w="4"/><text x="99.7276%" y="367.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.02%)</title><rect x="99.4776%" y="341" width="0.0201%" height="15" fill="rgb(218,36,50)" fg:x="19804" fg:w="4"/><text x="99.7276%" y="351.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (3 samples, 0.02%)</title><rect x="99.5128%" y="229" width="0.0151%" height="15" fill="rgb(226,80,48)" fg:x="19811" fg:w="3"/><text x="99.7628%" y="239.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.02%)</title><rect x="99.5128%" y="213" width="0.0151%" height="15" fill="rgb(238,224,15)" fg:x="19811" fg:w="3"/><text x="99.7628%" y="223.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (3 samples, 0.02%)</title><rect x="99.5128%" y="197" width="0.0151%" height="15" fill="rgb(241,136,10)" fg:x="19811" fg:w="3"/><text x="99.7628%" y="207.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (3 samples, 0.02%)</title><rect x="99.5128%" y="181" width="0.0151%" height="15" fill="rgb(208,32,45)" fg:x="19811" fg:w="3"/><text x="99.7628%" y="191.50"></text></g><g><title>__libc_write (3 samples, 0.02%)</title><rect x="99.5128%" y="165" width="0.0151%" height="15" fill="rgb(207,135,9)" fg:x="19811" fg:w="3"/><text x="99.7628%" y="175.50"></text></g><g><title>&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run (19,122 samples, 96.05%)</title><rect x="3.4810%" y="485" width="96.0518%" height="15" fill="rgb(206,86,44)" fg:x="693" fg:w="19122"/><text x="3.7310%" y="495.50">&lt;criterion::benchmark::ParameterizedBenchmark&lt;T&gt; as criterion::benchmark::BenchmarkDefinition&gt;::run</text></g><g><title>criterion::analysis::common (19,122 samples, 96.05%)</title><rect x="3.4810%" y="469" width="96.0518%" height="15" fill="rgb(245,177,15)" fg:x="693" fg:w="19122"/><text x="3.7310%" y="479.50">criterion::analysis::common</text></g><g><title>criterion::routine::Routine::sample (19,116 samples, 96.02%)</title><rect x="3.5112%" y="453" width="96.0217%" height="15" fill="rgb(206,64,50)" fg:x="699" fg:w="19116"/><text x="3.7612%" y="463.50">criterion::routine::Routine::sample</text></g><g><title>criterion::Bencher::iter (5,526 samples, 27.76%)</title><rect x="71.7752%" y="437" width="27.7577%" height="15" fill="rgb(234,36,40)" fg:x="14289" fg:w="5526"/><text x="72.0252%" y="447.50">criterion::Bencher::iter</text></g><g><title>&lt;adventofcode_rust_2021::day13::day13_part2::RunnerStruct as aoc_runner::Runner&gt;::bench (5,526 samples, 27.76%)</title><rect x="71.7752%" y="421" width="27.7577%" height="15" fill="rgb(213,64,8)" fg:x="14289" fg:w="5526"/><text x="72.0252%" y="431.50">&lt;adventofcode_rust_2021::day13::day13_part2::..</text></g><g><title>adventofcode_rust_2021::day13::part2 (5,526 samples, 27.76%)</title><rect x="71.7752%" y="405" width="27.7577%" height="15" fill="rgb(210,75,36)" fg:x="14289" fg:w="5526"/><text x="72.0252%" y="415.50">adventofcode_rust_2021::day13::part2</text></g><g><title>std::io::stdio::_print (4 samples, 0.02%)</title><rect x="99.5128%" y="389" width="0.0201%" height="15" fill="rgb(229,88,21)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="399.50"></text></g><g><title>std::io::stdio::print_to (4 samples, 0.02%)</title><rect x="99.5128%" y="373" width="0.0201%" height="15" fill="rgb(252,204,47)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="383.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (4 samples, 0.02%)</title><rect x="99.5128%" y="357" width="0.0201%" height="15" fill="rgb(208,77,27)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="367.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (4 samples, 0.02%)</title><rect x="99.5128%" y="341" width="0.0201%" height="15" fill="rgb(221,76,26)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (4 samples, 0.02%)</title><rect x="99.5128%" y="325" width="0.0201%" height="15" fill="rgb(225,139,18)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="335.50"></text></g><g><title>core::fmt::write (4 samples, 0.02%)</title><rect x="99.5128%" y="309" width="0.0201%" height="15" fill="rgb(230,137,11)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="319.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.02%)</title><rect x="99.5128%" y="293" width="0.0201%" height="15" fill="rgb(212,28,1)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="303.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (4 samples, 0.02%)</title><rect x="99.5128%" y="277" width="0.0201%" height="15" fill="rgb(248,164,17)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="287.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (4 samples, 0.02%)</title><rect x="99.5128%" y="261" width="0.0201%" height="15" fill="rgb(222,171,42)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="271.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (4 samples, 0.02%)</title><rect x="99.5128%" y="245" width="0.0201%" height="15" fill="rgb(243,84,45)" fg:x="19811" fg:w="4"/><text x="99.7628%" y="255.50"></text></g><g><title>_start (19,124 samples, 96.06%)</title><rect x="3.4760%" y="725" width="96.0619%" height="15" fill="rgb(252,49,23)" fg:x="692" fg:w="19124"/><text x="3.7260%" y="735.50">_start</text></g><g><title>__libc_start_main (19,124 samples, 96.06%)</title><rect x="3.4760%" y="709" width="96.0619%" height="15" fill="rgb(215,19,7)" fg:x="692" fg:w="19124"/><text x="3.7260%" y="719.50">__libc_start_main</text></g><g><title>main (19,124 samples, 96.06%)</title><rect x="3.4760%" y="693" width="96.0619%" height="15" fill="rgb(238,81,41)" fg:x="692" fg:w="19124"/><text x="3.7260%" y="703.50">main</text></g><g><title>std::rt::lang_start_internal (19,124 samples, 96.06%)</title><rect x="3.4760%" y="677" width="96.0619%" height="15" fill="rgb(210,199,37)" fg:x="692" fg:w="19124"/><text x="3.7260%" y="687.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (19,123 samples, 96.06%)</title><rect x="3.4810%" y="661" width="96.0569%" height="15" fill="rgb(244,192,49)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,123 samples, 96.06%)</title><rect x="3.4810%" y="645" width="96.0569%" height="15" fill="rgb(226,211,11)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,123 samples, 96.06%)</title><rect x="3.4810%" y="629" width="96.0569%" height="15" fill="rgb(236,162,54)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="639.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (19,123 samples, 96.06%)</title><rect x="3.4810%" y="613" width="96.0569%" height="15" fill="rgb(220,229,9)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="623.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (19,123 samples, 96.06%)</title><rect x="3.4810%" y="597" width="96.0569%" height="15" fill="rgb(250,87,22)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="607.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (19,123 samples, 96.06%)</title><rect x="3.4810%" y="581" width="96.0569%" height="15" fill="rgb(239,43,17)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="591.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (19,123 samples, 96.06%)</title><rect x="3.4810%" y="565" width="96.0569%" height="15" fill="rgb(231,177,25)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="575.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (19,123 samples, 96.06%)</title><rect x="3.4810%" y="549" width="96.0569%" height="15" fill="rgb(219,179,1)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="559.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (19,123 samples, 96.06%)</title><rect x="3.4810%" y="533" width="96.0569%" height="15" fill="rgb(238,219,53)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="543.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19,123 samples, 96.06%)</title><rect x="3.4810%" y="517" width="96.0569%" height="15" fill="rgb(232,167,36)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="527.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>aoc_benchmark::main (19,123 samples, 96.06%)</title><rect x="3.4810%" y="501" width="96.0569%" height="15" fill="rgb(244,19,51)" fg:x="693" fg:w="19123"/><text x="3.7310%" y="511.50">aoc_benchmark::main</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (3 samples, 0.02%)</title><rect x="99.5479%" y="549" width="0.0151%" height="15" fill="rgb(224,6,22)" fg:x="19818" fg:w="3"/><text x="99.7979%" y="559.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (3 samples, 0.02%)</title><rect x="99.5479%" y="533" width="0.0151%" height="15" fill="rgb(224,145,5)" fg:x="19818" fg:w="3"/><text x="99.7979%" y="543.50"></text></g><g><title>rayon::slice::quicksort::recurse (3 samples, 0.02%)</title><rect x="99.5479%" y="517" width="0.0151%" height="15" fill="rgb(234,130,49)" fg:x="19818" fg:w="3"/><text x="99.7979%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.5529%" y="501" width="0.0100%" height="15" fill="rgb(254,6,2)" fg:x="19819" fg:w="2"/><text x="99.8029%" y="511.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.03%)</title><rect x="99.5429%" y="565" width="0.0301%" height="15" fill="rgb(208,96,46)" fg:x="19817" fg:w="6"/><text x="99.7929%" y="575.50"></text></g><g><title>std::panicking::try (2 samples, 0.01%)</title><rect x="99.5630%" y="549" width="0.0100%" height="15" fill="rgb(239,3,39)" fg:x="19821" fg:w="2"/><text x="99.8130%" y="559.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (2 samples, 0.01%)</title><rect x="99.5630%" y="533" width="0.0100%" height="15" fill="rgb(233,210,1)" fg:x="19821" fg:w="2"/><text x="99.8130%" y="543.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.05%)</title><rect x="99.5781%" y="437" width="0.0452%" height="15" fill="rgb(244,137,37)" fg:x="19824" fg:w="9"/><text x="99.8281%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.05%)</title><rect x="99.5781%" y="421" width="0.0452%" height="15" fill="rgb(240,136,2)" fg:x="19824" fg:w="9"/><text x="99.8281%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.05%)</title><rect x="99.5781%" y="405" width="0.0452%" height="15" fill="rgb(239,18,37)" fg:x="19824" fg:w="9"/><text x="99.8281%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.05%)</title><rect x="99.5781%" y="389" width="0.0452%" height="15" fill="rgb(218,185,22)" fg:x="19824" fg:w="9"/><text x="99.8281%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.04%)</title><rect x="99.5881%" y="373" width="0.0352%" height="15" fill="rgb(225,218,4)" fg:x="19826" fg:w="7"/><text x="99.8381%" y="383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (19 samples, 0.10%)</title><rect x="99.5781%" y="485" width="0.0954%" height="15" fill="rgb(230,182,32)" fg:x="19824" fg:w="19"/><text x="99.8281%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.10%)</title><rect x="99.5781%" y="469" width="0.0954%" height="15" fill="rgb(242,56,43)" fg:x="19824" fg:w="19"/><text x="99.8281%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.10%)</title><rect x="99.5781%" y="453" width="0.0954%" height="15" fill="rgb(233,99,24)" fg:x="19824" fg:w="19"/><text x="99.8281%" y="463.50"></text></g><g><title>std::panicking::try (10 samples, 0.05%)</title><rect x="99.6233%" y="437" width="0.0502%" height="15" fill="rgb(234,209,42)" fg:x="19833" fg:w="10"/><text x="99.8733%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.05%)</title><rect x="99.6233%" y="421" width="0.0502%" height="15" fill="rgb(227,7,12)" fg:x="19833" fg:w="10"/><text x="99.8733%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.05%)</title><rect x="99.6233%" y="405" width="0.0502%" height="15" fill="rgb(245,203,43)" fg:x="19833" fg:w="10"/><text x="99.8733%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.05%)</title><rect x="99.6233%" y="389" width="0.0502%" height="15" fill="rgb(238,205,33)" fg:x="19833" fg:w="10"/><text x="99.8733%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (8 samples, 0.04%)</title><rect x="99.6333%" y="373" width="0.0402%" height="15" fill="rgb(231,56,7)" fg:x="19835" fg:w="8"/><text x="99.8833%" y="383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.05%)</title><rect x="99.6735%" y="437" width="0.0452%" height="15" fill="rgb(244,186,29)" fg:x="19843" fg:w="9"/><text x="99.9235%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.05%)</title><rect x="99.6735%" y="421" width="0.0452%" height="15" fill="rgb(234,111,31)" fg:x="19843" fg:w="9"/><text x="99.9235%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.05%)</title><rect x="99.6735%" y="405" width="0.0452%" height="15" fill="rgb(241,149,10)" fg:x="19843" fg:w="9"/><text x="99.9235%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.05%)</title><rect x="99.6735%" y="389" width="0.0452%" height="15" fill="rgb(249,206,44)" fg:x="19843" fg:w="9"/><text x="99.9235%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.03%)</title><rect x="99.6886%" y="373" width="0.0301%" height="15" fill="rgb(251,153,30)" fg:x="19846" fg:w="6"/><text x="99.9386%" y="383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (38 samples, 0.19%)</title><rect x="99.5781%" y="533" width="0.1909%" height="15" fill="rgb(239,152,38)" fg:x="19824" fg:w="38"/><text x="99.8281%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (38 samples, 0.19%)</title><rect x="99.5781%" y="517" width="0.1909%" height="15" fill="rgb(249,139,47)" fg:x="19824" fg:w="38"/><text x="99.8281%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (38 samples, 0.19%)</title><rect x="99.5781%" y="501" width="0.1909%" height="15" fill="rgb(244,64,35)" fg:x="19824" fg:w="38"/><text x="99.8281%" y="511.50"></text></g><g><title>std::panicking::try (19 samples, 0.10%)</title><rect x="99.6735%" y="485" width="0.0954%" height="15" fill="rgb(216,46,15)" fg:x="19843" fg:w="19"/><text x="99.9235%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.10%)</title><rect x="99.6735%" y="469" width="0.0954%" height="15" fill="rgb(250,74,19)" fg:x="19843" fg:w="19"/><text x="99.9235%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.10%)</title><rect x="99.6735%" y="453" width="0.0954%" height="15" fill="rgb(249,42,33)" fg:x="19843" fg:w="19"/><text x="99.9235%" y="463.50"></text></g><g><title>std::panicking::try (10 samples, 0.05%)</title><rect x="99.7187%" y="437" width="0.0502%" height="15" fill="rgb(242,149,17)" fg:x="19852" fg:w="10"/><text x="99.9687%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.05%)</title><rect x="99.7187%" y="421" width="0.0502%" height="15" fill="rgb(244,29,21)" fg:x="19852" fg:w="10"/><text x="99.9687%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.05%)</title><rect x="99.7187%" y="405" width="0.0502%" height="15" fill="rgb(220,130,37)" fg:x="19852" fg:w="10"/><text x="99.9687%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.05%)</title><rect x="99.7187%" y="389" width="0.0502%" height="15" fill="rgb(211,67,2)" fg:x="19852" fg:w="10"/><text x="99.9687%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (10 samples, 0.05%)</title><rect x="99.7187%" y="373" width="0.0502%" height="15" fill="rgb(235,68,52)" fg:x="19852" fg:w="10"/><text x="99.9687%" y="383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.05%)</title><rect x="99.7689%" y="437" width="0.0502%" height="15" fill="rgb(246,142,3)" fg:x="19862" fg:w="10"/><text x="100.0189%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.05%)</title><rect x="99.7689%" y="421" width="0.0502%" height="15" fill="rgb(241,25,7)" fg:x="19862" fg:w="10"/><text x="100.0189%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.05%)</title><rect x="99.7689%" y="405" width="0.0502%" height="15" fill="rgb(242,119,39)" fg:x="19862" fg:w="10"/><text x="100.0189%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.05%)</title><rect x="99.7689%" y="389" width="0.0502%" height="15" fill="rgb(241,98,45)" fg:x="19862" fg:w="10"/><text x="100.0189%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.05%)</title><rect x="99.7740%" y="373" width="0.0452%" height="15" fill="rgb(254,28,30)" fg:x="19863" fg:w="9"/><text x="100.0240%" y="383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (19 samples, 0.10%)</title><rect x="99.7689%" y="485" width="0.0954%" height="15" fill="rgb(241,142,54)" fg:x="19862" fg:w="19"/><text x="100.0189%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.10%)</title><rect x="99.7689%" y="469" width="0.0954%" height="15" fill="rgb(222,85,15)" fg:x="19862" fg:w="19"/><text x="100.0189%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.10%)</title><rect x="99.7689%" y="453" width="0.0954%" height="15" fill="rgb(210,85,47)" fg:x="19862" fg:w="19"/><text x="100.0189%" y="463.50"></text></g><g><title>std::panicking::try (9 samples, 0.05%)</title><rect x="99.8192%" y="437" width="0.0452%" height="15" fill="rgb(224,206,25)" fg:x="19872" fg:w="9"/><text x="100.0692%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.05%)</title><rect x="99.8192%" y="421" width="0.0452%" height="15" fill="rgb(243,201,19)" fg:x="19872" fg:w="9"/><text x="100.0692%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.05%)</title><rect x="99.8192%" y="405" width="0.0452%" height="15" fill="rgb(236,59,4)" fg:x="19872" fg:w="9"/><text x="100.0692%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.05%)</title><rect x="99.8192%" y="389" width="0.0452%" height="15" fill="rgb(254,179,45)" fg:x="19872" fg:w="9"/><text x="100.0692%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (7 samples, 0.04%)</title><rect x="99.8292%" y="373" width="0.0352%" height="15" fill="rgb(226,14,10)" fg:x="19874" fg:w="7"/><text x="100.0792%" y="383.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.05%)</title><rect x="99.8644%" y="437" width="0.0502%" height="15" fill="rgb(244,27,41)" fg:x="19881" fg:w="10"/><text x="100.1144%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.05%)</title><rect x="99.8644%" y="421" width="0.0502%" height="15" fill="rgb(235,35,32)" fg:x="19881" fg:w="10"/><text x="100.1144%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.05%)</title><rect x="99.8644%" y="405" width="0.0502%" height="15" fill="rgb(218,68,31)" fg:x="19881" fg:w="10"/><text x="100.1144%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.05%)</title><rect x="99.8644%" y="389" width="0.0502%" height="15" fill="rgb(207,120,37)" fg:x="19881" fg:w="10"/><text x="100.1144%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (6 samples, 0.03%)</title><rect x="99.8845%" y="373" width="0.0301%" height="15" fill="rgb(227,98,0)" fg:x="19885" fg:w="6"/><text x="100.1345%" y="383.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (78 samples, 0.39%)</title><rect x="99.5730%" y="565" width="0.3918%" height="15" fill="rgb(207,7,3)" fg:x="19823" fg:w="78"/><text x="99.8230%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (77 samples, 0.39%)</title><rect x="99.5781%" y="549" width="0.3868%" height="15" fill="rgb(206,98,19)" fg:x="19824" fg:w="77"/><text x="99.8281%" y="559.50"></text></g><g><title>std::panicking::try (39 samples, 0.20%)</title><rect x="99.7689%" y="533" width="0.1959%" height="15" fill="rgb(217,5,26)" fg:x="19862" fg:w="39"/><text x="100.0189%" y="543.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (39 samples, 0.20%)</title><rect x="99.7689%" y="517" width="0.1959%" height="15" fill="rgb(235,190,38)" fg:x="19862" fg:w="39"/><text x="100.0189%" y="527.50"></text></g><g><title>rayon_core::registry::in_worker (39 samples, 0.20%)</title><rect x="99.7689%" y="501" width="0.1959%" height="15" fill="rgb(247,86,24)" fg:x="19862" fg:w="39"/><text x="100.0189%" y="511.50"></text></g><g><title>std::panicking::try (20 samples, 0.10%)</title><rect x="99.8644%" y="485" width="0.1005%" height="15" fill="rgb(205,101,16)" fg:x="19881" fg:w="20"/><text x="100.1144%" y="495.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.10%)</title><rect x="99.8644%" y="469" width="0.1005%" height="15" fill="rgb(246,168,33)" fg:x="19881" fg:w="20"/><text x="100.1144%" y="479.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.10%)</title><rect x="99.8644%" y="453" width="0.1005%" height="15" fill="rgb(231,114,1)" fg:x="19881" fg:w="20"/><text x="100.1144%" y="463.50"></text></g><g><title>std::panicking::try (10 samples, 0.05%)</title><rect x="99.9146%" y="437" width="0.0502%" height="15" fill="rgb(207,184,53)" fg:x="19891" fg:w="10"/><text x="100.1646%" y="447.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.05%)</title><rect x="99.9146%" y="421" width="0.0502%" height="15" fill="rgb(224,95,51)" fg:x="19891" fg:w="10"/><text x="100.1646%" y="431.50"></text></g><g><title>&lt;rayon::iter::fold::FoldFolder&lt;C,ID,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.05%)</title><rect x="99.9146%" y="405" width="0.0502%" height="15" fill="rgb(212,188,45)" fg:x="19891" fg:w="10"/><text x="100.1646%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.05%)</title><rect x="99.9146%" y="389" width="0.0502%" height="15" fill="rgb(223,154,38)" fg:x="19891" fg:w="10"/><text x="100.1646%" y="399.50"></text></g><g><title>criterion::stats::bivariate::resamples::Resamples&lt;X,Y&gt;::next (9 samples, 0.05%)</title><rect x="99.9196%" y="373" width="0.0452%" height="15" fill="rgb(251,22,52)" fg:x="19892" fg:w="9"/><text x="100.1696%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.9699%" y="501" width="0.0100%" height="15" fill="rgb(229,209,22)" fg:x="19902" fg:w="2"/><text x="100.2199%" y="511.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.9699%" y="485" width="0.0100%" height="15" fill="rgb(234,138,34)" fg:x="19902" fg:w="2"/><text x="100.2199%" y="495.50"></text></g><g><title>rayon::slice::quicksort::recurse (4 samples, 0.02%)</title><rect x="99.9699%" y="533" width="0.0201%" height="15" fill="rgb(212,95,11)" fg:x="19902" fg:w="4"/><text x="100.2199%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.02%)</title><rect x="99.9699%" y="517" width="0.0201%" height="15" fill="rgb(240,179,47)" fg:x="19902" fg:w="4"/><text x="100.2199%" y="527.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.9799%" y="501" width="0.0100%" height="15" fill="rgb(240,163,11)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="511.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.9799%" y="485" width="0.0100%" height="15" fill="rgb(236,37,12)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="495.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.9799%" y="469" width="0.0100%" height="15" fill="rgb(232,164,16)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="479.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.9799%" y="453" width="0.0100%" height="15" fill="rgb(244,205,15)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="463.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.9799%" y="437" width="0.0100%" height="15" fill="rgb(223,117,47)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="447.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.9799%" y="421" width="0.0100%" height="15" fill="rgb(244,107,35)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="431.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.9799%" y="405" width="0.0100%" height="15" fill="rgb(205,140,8)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="415.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.9799%" y="389" width="0.0100%" height="15" fill="rgb(228,84,46)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="399.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.9799%" y="373" width="0.0100%" height="15" fill="rgb(254,188,9)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="383.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.9799%" y="357" width="0.0100%" height="15" fill="rgb(206,112,54)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="367.50"></text></g><g><title>rayon_core::registry::in_worker (2 samples, 0.01%)</title><rect x="99.9799%" y="341" width="0.0100%" height="15" fill="rgb(216,84,49)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="351.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (2 samples, 0.01%)</title><rect x="99.9799%" y="325" width="0.0100%" height="15" fill="rgb(214,194,35)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="335.50"></text></g><g><title>rayon::slice::quicksort::recurse (2 samples, 0.01%)</title><rect x="99.9799%" y="309" width="0.0100%" height="15" fill="rgb(249,28,3)" fg:x="19904" fg:w="2"/><text x="100.2299%" y="319.50"></text></g><g><title>rayon::slice::quicksort::recurse (6 samples, 0.03%)</title><rect x="99.9648%" y="565" width="0.0301%" height="15" fill="rgb(222,56,52)" fg:x="19901" fg:w="6"/><text x="100.2148%" y="575.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.03%)</title><rect x="99.9699%" y="549" width="0.0251%" height="15" fill="rgb(245,217,50)" fg:x="19902" fg:w="5"/><text x="100.2199%" y="559.50"></text></g><g><title>all (19,908 samples, 100%)</title><rect x="0.0000%" y="757" width="100.0000%" height="15" fill="rgb(213,201,24)" fg:x="0" fg:w="19908"/><text x="0.2500%" y="767.50"></text></g><g><title>aoc_benchmark-f (19,908 samples, 100.00%)</title><rect x="0.0000%" y="741" width="100.0000%" height="15" fill="rgb(248,116,28)" fg:x="0" fg:w="19908"/><text x="0.2500%" y="751.50">aoc_benchmark-f</text></g><g><title>clone (92 samples, 0.46%)</title><rect x="99.5379%" y="725" width="0.4621%" height="15" fill="rgb(219,72,43)" fg:x="19816" fg:w="92"/><text x="99.7879%" y="735.50"></text></g><g><title>start_thread (91 samples, 0.46%)</title><rect x="99.5429%" y="709" width="0.4571%" height="15" fill="rgb(209,138,14)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="719.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (91 samples, 0.46%)</title><rect x="99.5429%" y="693" width="0.4571%" height="15" fill="rgb(222,18,33)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (91 samples, 0.46%)</title><rect x="99.5429%" y="677" width="0.4571%" height="15" fill="rgb(213,199,7)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="687.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (91 samples, 0.46%)</title><rect x="99.5429%" y="661" width="0.4571%" height="15" fill="rgb(250,110,10)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable-shim}} (91 samples, 0.46%)</title><rect x="99.5429%" y="645" width="0.4571%" height="15" fill="rgb(248,123,6)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="655.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (91 samples, 0.46%)</title><rect x="99.5429%" y="629" width="0.4571%" height="15" fill="rgb(206,91,31)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="639.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (91 samples, 0.46%)</title><rect x="99.5429%" y="613" width="0.4571%" height="15" fill="rgb(211,154,13)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="623.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (91 samples, 0.46%)</title><rect x="99.5429%" y="597" width="0.4571%" height="15" fill="rgb(225,148,7)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="607.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (91 samples, 0.46%)</title><rect x="99.5429%" y="581" width="0.4571%" height="15" fill="rgb(220,160,43)" fg:x="19817" fg:w="91"/><text x="99.7929%" y="591.50"></text></g></svg></svg>